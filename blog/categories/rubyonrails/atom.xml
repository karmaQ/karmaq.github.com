<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RubyonRails | CilaCila]]></title>
  <link href="http://karmaQ.github.com/blog/categories/rubyonrails/atom.xml" rel="self"/>
  <link href="http://karmaQ.github.com/"/>
  <updated>2012-05-26T13:05:47+08:00</updated>
  <id>http://karmaQ.github.com/</id>
  <author>
    <name><![CDATA[Karma]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Rails Tutorial] 从零开始搭建 Ruby on Rails 开发环境]]></title>
    <link href="http://karmaQ.github.com/blog/2012/05/26/rails-tutorial-from-zero-to-deploy/"/>
    <updated>2012-05-26T00:01:00+08:00</updated>
    <id>http://karmaQ.github.com/blog/2012/05/26/rails-tutorial-from-zero-to-deploy</id>
    <content type="html"><![CDATA[<p>去年8月份开始接触RoR，之后虽然做过几个小的App但是并没有对Rails进行一个系统的学习，翻看之前的代码，简直惨不忍睹，并且带有浓重的C# Style，今天捧起“Ruby on Rails 3 Tutorial”开始从头学起，从今以后将作为一个Rubyer开始新的生活。</p>

<hr />

<h2>搭建开发环境</h2>

<h4>1、安装Git</h4>

<p>通过<a href="http://code.google.com/p/git-osx-installer/">git-osx-installer</a>进行安装，异常的简单</p>

<h4>2、安装Xcode</h4>

<p>之后要下载并安装<a href="https://developer.apple.com/downloads/index.action">Xcode</a>,当然了主要是Command Line Tools for Xcode。</p>

<h4>3、安装Homebrew</h4>

<p>这里先推荐的一个东西<a href="http://mxcl.github.com/homebrew/">homebrew</a>,Mac OS X 下新的软件包管理工具，比较方便的，之后就可以使用类似<code>$ brew install unrar</code>的命令管理包了，安装方法：</p>

<pre><code>/usr/bin/ruby -e "$(/usr/bin/curl -fsSL https://raw.github.com/mxcl/homebrew/master/Library/Contributions/install_homebrew.rb)"
</code></pre>

<p>也可以按照<a href="http://blog.jjgod.org/2009/12/21/homebrew-package-management/">这篇文章</a>中的做法进行安装:</p>

<p>首先，Homebrew 的原则是“No sudo”，也就是说，既然 Mac OS X (client 版本) 绝大部分情况下都是归你这个有管理员权限的用户，为什么在自己的 /usr/local 下安装程序还需要 sudo 呢？所以，首先：</p>

<pre><code>$ sudo chown -R \`whoami` /usr/local
</code></pre>

<p>然后可以正式开始安装，我推荐的安装方式是先用 git-osx-installer 装上 git，然后用 git 安装：</p>

<pre><code>$ cd /usr/local
$ git init
$ git remote add origin git://github.com/mxcl/  $ homebrew.git
$ git pull origin master
</code></pre>

<p>这么做的实际作用是把你的 /usr/local 目录变成了一个本地 git 仓库，只不过这个仓库只跟踪跟 Homebrew 相关的更新，并不影响任何其他软件的安装。</p>

<p>这样安装会在 /usr/local 下创建 Library 这个目录，然后在 /usr/local/bin 中加入 brew 这个 ruby 脚本。</p>

<h4>4、安装 RVM</h4>

<pre><code>$ bash -s stable &lt; &lt;(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)  
</code></pre>

<p>等待rvm安装好之后，配置环境变量，在当前用户目录下输入</p>

<pre><code>sudo vim .bash_profile 
</code></pre>

<p>在其中加入</p>

<pre><code>[[ -s "$HOME/.rvm/scripts/rvm" ]] &amp;&amp; source "$HOME/.rvm/scripts/rvm"
</code></pre>

<p>source一下即可。</p>

<p>安装Ruby，并设置默认版本(当前最新的是1.9.3)</p>

<pre><code>$ rvm install ruby --head 
$ rvm use 1.9.3 --default
</code></pre>

<p>更换源</p>

<pre><code>$ [sudo] gem update --system  
$ [sudo] gem uninstall rubygems-update  
$ [sudo] gem sources -r http://rubygems.org/  
$ [sudo] gem sources -a http://ruby.taobao.org  
</code></pre>

<h4>5、安装rails</h4>

<pre><code>$ gem install rails -V
</code></pre>

<p>至此，rails的应该已经可以使用了。</p>

<h4>6、选定编辑器</h4>

<p>Mac下边就Textmate或者Macvim，我选的是后起之秀<a href="http://www.sublimetext.com/">Sublime Text 2</a></p>

<p>详细的介绍和使用推荐<a href="http://ruby-china.org/">Ruby-China</a>的一篇<a href="http://ruby-china.org/topics/3107">帖子</a></p>

<p>一些常用的快捷键</p>

<ul>
<li>快如闪电查找文件：Ctrl + P</li>
<li>方法查找或行定位(用在Ctrl + P后)：@ / # /</li>
<li>快捷命令板：Ctrl + Shift + P</li>
<li>控制台：Ctrl + \</li>
<li>包控制：Package Control</li>
<li>快速代码书写：Zen Coding</li>
<li>对齐(Ctrl + Alt + A)：Alignment</li>
<li>无干扰编辑：Shift + F11</li>
</ul>


<hr />

<h2>使用 Git 进行版本控制</h2>

<h4>1、全局设置</h4>

<p>首先是设置用户名和邮箱</p>

<pre><code>$ git config --global user.name "Your Name" $ git config --global user.email youremail@example.com
</code></pre>

<p>为了方便起见，做一些快捷设置(别名而已)</p>

<pre><code>$ git config --global alias.co checkout
</code></pre>

<p>然后就是设置Git的默认编辑器,我用的是Sublime Text 2</p>

<pre><code>$ git config --global core.editor "subl -w"
</code></pre>

<p>如果使用 textmate 就把subl -w换成mate -w,同理gvim对应 "gvim -f",MacVim对应"mvim -f"，而gedit则对应"gedit -s"。</p>

<p>然后初始化一下下</p>

<pre><code>$ git init
</code></pre>

<p><code>.gitignore</code>是忽略列表，Rails会自动生成一个的。</p>

<h4>2、Adding and Committing</h4>

<p>添加文件并且commit, -m 添加了一个消息，如果不写-m的话，会弹出编辑器让你添加的。</p>

<pre><code>$ git add .
$ git commit -m "Initial commit"
</code></pre>

<p>使用 <code>$ git status</code>可以查看当前版本的状态，<code>$ git log</code> 查看日志，<code>$ git checkout -f</code>来恢复到上一个版本。</p>

<p>嘛，更多的命令在<a href="http://www.kernel.org/pub/software/scm/git/docs/v1.4.4.4/tutorial.html">这里</a>，详细的介绍要参考<a href="http://zh.wikipedia.org/wiki/Git">Wiki</a>。</p>

<h4>3、Github</h4>

<p>其实最好的教程还是官方的<a href="http://help.github.com/">文档</a>啦，简单全面，我在这里再稍微啰嗦几句。</p>

<p>首先要申请一个Github的账号，并且建立一个新的Repository，然后执行下面的命令</p>

<pre><code>$ git remote add origin git@github.com:&lt;username&gt;/&lt;Repositoryname&gt;.git
$ git push origin master
</code></pre>

<p>这里其实是给Repository的地址起了一个别名而已，之后可以在项目文件夹下的<code>.git/config</code>中修改和删除。</p>

<p>通过 -b 签出一个新的分支，不加-b的话就是切换分支,通过<code>$ git branch</code>可以查看分支</p>

<pre><code>$ git checkout -b new_branch
</code></pre>

<p>通过<code>$ git merge &lt;branch&gt;</code>来合并分支，-d是删除，-D强制删除。</p>

<p>另一个比较常用的命令就是<code>$ git push</code>了，当然了要想push到github上需要先生成密钥对</p>

<pre><code>#ssh-keygen -t rsa -C "xxx@mail.com"。
</code></pre>

<p>把生成的密钥粘贴在Github的设置中。</p>

<h4>4、部署在Heroku</h4>

<p>安装并添加密钥对：</p>

<pre><code>$ [sudo] gem install heroku
$ heroku keys:add
</code></pre>

<p> 申请<a href="http://www.heroku.com/">Heroku</a>账号，并创建一个App</p>

<pre><code>$ heroku create
</code></pre>

<p> Push过去就可以了</p>

<pre><code>$ git push heroku master
</code></pre>

<h2>尾声</h2>

<p>折腾了半天，环境总算是弄好了，准备开发了。</p>
]]></content>
  </entry>
  
</feed>
